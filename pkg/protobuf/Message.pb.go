// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.27.0
// source: Message.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestHelloMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromID  int64  `protobuf:"varint,1,opt,name=fromID,proto3" json:"fromID,omitempty"`
	DestID  int64  `protobuf:"varint,2,opt,name=destID,proto3" json:"destID,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *TestHelloMessage) Reset() {
	*x = TestHelloMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestHelloMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestHelloMessage) ProtoMessage() {}

func (x *TestHelloMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestHelloMessage.ProtoReflect.Descriptor instead.
func (*TestHelloMessage) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{0}
}

func (x *TestHelloMessage) GetFromID() int64 {
	if x != nil {
		return x.FromID
	}
	return 0
}

func (x *TestHelloMessage) GetDestID() int64 {
	if x != nil {
		return x.DestID
	}
	return 0
}

func (x *TestHelloMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type TestResMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromID  int64  `protobuf:"varint,1,opt,name=fromID,proto3" json:"fromID,omitempty"`
	DestID  int64  `protobuf:"varint,2,opt,name=destID,proto3" json:"destID,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *TestResMessage) Reset() {
	*x = TestResMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestResMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestResMessage) ProtoMessage() {}

func (x *TestResMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestResMessage.ProtoReflect.Descriptor instead.
func (*TestResMessage) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{1}
}

func (x *TestResMessage) GetFromID() int64 {
	if x != nil {
		return x.FromID
	}
	return 0
}

func (x *TestResMessage) GetDestID() int64 {
	if x != nil {
		return x.DestID
	}
	return 0
}

func (x *TestResMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // instance id
	Id     []byte `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Sender uint32 `protobuf:"varint,3,opt,name=sender,proto3" json:"sender,omitempty"`
	Data   []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{2}
}

func (x *Message) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Message) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Message) GetSender() uint32 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *Message) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// provable broadcast
type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value      []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`           // paload
	Validation []byte `protobuf:"bytes,2,opt,name=validation,proto3" json:"validation,omitempty"` // for external validating
}

func (x *Value) Reset() {
	*x = Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{3}
}

func (x *Value) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Value) GetValidation() []byte {
	if x != nil {
		return x.Validation
	}
	return nil
}

type Echo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sigshare []byte `protobuf:"bytes,1,opt,name=sigshare,proto3" json:"sigshare,omitempty"`
}

func (x *Echo) Reset() {
	*x = Echo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Echo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Echo) ProtoMessage() {}

func (x *Echo) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Echo.ProtoReflect.Descriptor instead.
func (*Echo) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{4}
}

func (x *Echo) GetSigshare() []byte {
	if x != nil {
		return x.Sigshare
	}
	return nil
}

// smvba
type Lock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Sig   []byte `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`
}

func (x *Lock) Reset() {
	*x = Lock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lock) ProtoMessage() {}

func (x *Lock) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lock.ProtoReflect.Descriptor instead.
func (*Lock) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{5}
}

func (x *Lock) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Lock) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

type Finish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Sig   []byte `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`
}

func (x *Finish) Reset() {
	*x = Finish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Finish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Finish) ProtoMessage() {}

func (x *Finish) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Finish.ProtoReflect.Descriptor instead.
func (*Finish) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{6}
}

func (x *Finish) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Finish) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

type Done struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinShare []byte `protobuf:"bytes,1,opt,name=coinShare,proto3" json:"coinShare,omitempty"`
}

func (x *Done) Reset() {
	*x = Done{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Done) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Done) ProtoMessage() {}

func (x *Done) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Done.ProtoReflect.Descriptor instead.
func (*Done) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{7}
}

func (x *Done) GetCoinShare() []byte {
	if x != nil {
		return x.CoinShare
	}
	return nil
}

type Halt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Sig   []byte `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`
}

func (x *Halt) Reset() {
	*x = Halt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Halt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Halt) ProtoMessage() {}

func (x *Halt) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Halt.ProtoReflect.Descriptor instead.
func (*Halt) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{8}
}

func (x *Halt) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Halt) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

type PreVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vote  bool   `protobuf:"varint,1,opt,name=vote,proto3" json:"vote,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Sig   []byte `protobuf:"bytes,3,opt,name=sig,proto3" json:"sig,omitempty"`
}

func (x *PreVote) Reset() {
	*x = PreVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreVote) ProtoMessage() {}

func (x *PreVote) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreVote.ProtoReflect.Descriptor instead.
func (*PreVote) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{9}
}

func (x *PreVote) GetVote() bool {
	if x != nil {
		return x.Vote
	}
	return false
}

func (x *PreVote) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *PreVote) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

type Vote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vote     bool   `protobuf:"varint,1,opt,name=vote,proto3" json:"vote,omitempty"`
	Value    []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Sig      []byte `protobuf:"bytes,3,opt,name=sig,proto3" json:"sig,omitempty"`
	Sigshare []byte `protobuf:"bytes,4,opt,name=sigshare,proto3" json:"sigshare,omitempty"`
}

func (x *Vote) Reset() {
	*x = Vote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vote) ProtoMessage() {}

func (x *Vote) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vote.ProtoReflect.Descriptor instead.
func (*Vote) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{10}
}

func (x *Vote) GetVote() bool {
	if x != nil {
		return x.Vote
	}
	return false
}

func (x *Vote) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Vote) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *Vote) GetSigshare() []byte {
	if x != nil {
		return x.Sigshare
	}
	return nil
}

// sDumbo
type Proposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx   []byte   `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	View []uint32 `protobuf:"varint,2,rep,packed,name=view,proto3" json:"view,omitempty"`
}

func (x *Proposal) Reset() {
	*x = Proposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Proposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proposal) ProtoMessage() {}

func (x *Proposal) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proposal.ProtoReflect.Descriptor instead.
func (*Proposal) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{11}
}

func (x *Proposal) GetTx() []byte {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *Proposal) GetView() []uint32 {
	if x != nil {
		return x.View
	}
	return nil
}

type BLock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Sig  []byte `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`
}

func (x *BLock) Reset() {
	*x = BLock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BLock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BLock) ProtoMessage() {}

func (x *BLock) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BLock.ProtoReflect.Descriptor instead.
func (*BLock) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{12}
}

func (x *BLock) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *BLock) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

type BLockSetValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid  []uint32 `protobuf:"varint,1,rep,packed,name=pid,proto3" json:"pid,omitempty"`
	Hash [][]byte `protobuf:"bytes,2,rep,name=hash,proto3" json:"hash,omitempty"`
}

func (x *BLockSetValue) Reset() {
	*x = BLockSetValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BLockSetValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BLockSetValue) ProtoMessage() {}

func (x *BLockSetValue) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BLockSetValue.ProtoReflect.Descriptor instead.
func (*BLockSetValue) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{13}
}

func (x *BLockSetValue) GetPid() []uint32 {
	if x != nil {
		return x.Pid
	}
	return nil
}

func (x *BLockSetValue) GetHash() [][]byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type BLockSetValidation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sig [][]byte `protobuf:"bytes,1,rep,name=sig,proto3" json:"sig,omitempty"`
}

func (x *BLockSetValidation) Reset() {
	*x = BLockSetValidation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BLockSetValidation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BLockSetValidation) ProtoMessage() {}

func (x *BLockSetValidation) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BLockSetValidation.ProtoReflect.Descriptor instead.
func (*BLockSetValidation) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{14}
}

func (x *BLockSetValidation) GetSig() [][]byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

type Call struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Indices []uint32 `protobuf:"varint,1,rep,packed,name=indices,proto3" json:"indices,omitempty"`
}

func (x *Call) Reset() {
	*x = Call{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Call) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Call) ProtoMessage() {}

func (x *Call) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Call.ProtoReflect.Descriptor instead.
func (*Call) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{15}
}

func (x *Call) GetIndices() []uint32 {
	if x != nil {
		return x.Indices
	}
	return nil
}

type Help struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Indices       []uint32              `protobuf:"varint,1,rep,packed,name=indices,proto3" json:"indices,omitempty"`
	ShardAndProof []*Help_ShardAndProof `protobuf:"bytes,2,rep,name=shardAndProof,proto3" json:"shardAndProof,omitempty"`
}

func (x *Help) Reset() {
	*x = Help{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Help) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Help) ProtoMessage() {}

func (x *Help) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Help.ProtoReflect.Descriptor instead.
func (*Help) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{16}
}

func (x *Help) GetIndices() []uint32 {
	if x != nil {
		return x.Indices
	}
	return nil
}

func (x *Help) GetShardAndProof() []*Help_ShardAndProof {
	if x != nil {
		return x.ShardAndProof
	}
	return nil
}

// TSE
type Dec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DecShare []byte `protobuf:"bytes,2,opt,name=decShare,proto3" json:"decShare,omitempty"`
}

func (x *Dec) Reset() {
	*x = Dec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dec) ProtoMessage() {}

func (x *Dec) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dec.ProtoReflect.Descriptor instead.
func (*Dec) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{17}
}

func (x *Dec) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Dec) GetDecShare() []byte {
	if x != nil {
		return x.DecShare
	}
	return nil
}

// ABVSS
type SharesMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceID int64    `protobuf:"varint,1,opt,name=instanceID,proto3" json:"instanceID,omitempty"`
	FromID     int64    `protobuf:"varint,2,opt,name=fromID,proto3" json:"fromID,omitempty"`
	Index      int64    `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	Zix        [][]byte `protobuf:"bytes,4,rep,name=zix,proto3" json:"zix,omitempty"`
	Ziy        [][]byte `protobuf:"bytes,5,rep,name=ziy,proto3" json:"ziy,omitempty"`
	Xix        [][]byte `protobuf:"bytes,6,rep,name=xix,proto3" json:"xix,omitempty"`
	Xiy        [][]byte `protobuf:"bytes,7,rep,name=xiy,proto3" json:"xiy,omitempty"`
}

func (x *SharesMsg) Reset() {
	*x = SharesMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharesMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharesMsg) ProtoMessage() {}

func (x *SharesMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharesMsg.ProtoReflect.Descriptor instead.
func (*SharesMsg) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{18}
}

func (x *SharesMsg) GetInstanceID() int64 {
	if x != nil {
		return x.InstanceID
	}
	return 0
}

func (x *SharesMsg) GetFromID() int64 {
	if x != nil {
		return x.FromID
	}
	return 0
}

func (x *SharesMsg) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *SharesMsg) GetZix() [][]byte {
	if x != nil {
		return x.Zix
	}
	return nil
}

func (x *SharesMsg) GetZiy() [][]byte {
	if x != nil {
		return x.Ziy
	}
	return nil
}

func (x *SharesMsg) GetXix() [][]byte {
	if x != nil {
		return x.Xix
	}
	return nil
}

func (x *SharesMsg) GetXiy() [][]byte {
	if x != nil {
		return x.Xiy
	}
	return nil
}

type LCMMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceID int64    `protobuf:"varint,1,opt,name=instanceID,proto3" json:"instanceID,omitempty"`
	FromID     int64    `protobuf:"varint,2,opt,name=fromID,proto3" json:"fromID,omitempty"`
	DestID     int64    `protobuf:"varint,3,opt,name=destID,proto3" json:"destID,omitempty"`
	Lcmi       [][]byte `protobuf:"bytes,4,rep,name=lcmi,proto3" json:"lcmi,omitempty"`
}

func (x *LCMMsg) Reset() {
	*x = LCMMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LCMMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LCMMsg) ProtoMessage() {}

func (x *LCMMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LCMMsg.ProtoReflect.Descriptor instead.
func (*LCMMsg) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{19}
}

func (x *LCMMsg) GetInstanceID() int64 {
	if x != nil {
		return x.InstanceID
	}
	return 0
}

func (x *LCMMsg) GetFromID() int64 {
	if x != nil {
		return x.FromID
	}
	return 0
}

func (x *LCMMsg) GetDestID() int64 {
	if x != nil {
		return x.DestID
	}
	return 0
}

func (x *LCMMsg) GetLcmi() [][]byte {
	if x != nil {
		return x.Lcmi
	}
	return nil
}

type SKMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceID int64  `protobuf:"varint,1,opt,name=instanceID,proto3" json:"instanceID,omitempty"`
	FromID     int64  `protobuf:"varint,2,opt,name=fromID,proto3" json:"fromID,omitempty"`
	DestID     int64  `protobuf:"varint,3,opt,name=destID,proto3" json:"destID,omitempty"`
	Sk         []byte `protobuf:"bytes,4,opt,name=sk,proto3" json:"sk,omitempty"`
}

func (x *SKMsg) Reset() {
	*x = SKMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SKMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SKMsg) ProtoMessage() {}

func (x *SKMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SKMsg.ProtoReflect.Descriptor instead.
func (*SKMsg) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{20}
}

func (x *SKMsg) GetInstanceID() int64 {
	if x != nil {
		return x.InstanceID
	}
	return 0
}

func (x *SKMsg) GetFromID() int64 {
	if x != nil {
		return x.FromID
	}
	return 0
}

func (x *SKMsg) GetDestID() int64 {
	if x != nil {
		return x.DestID
	}
	return 0
}

func (x *SKMsg) GetSk() []byte {
	if x != nil {
		return x.Sk
	}
	return nil
}

// one-sided voting
type OSVMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceID int64  `protobuf:"varint,1,opt,name=instanceID,proto3" json:"instanceID,omitempty"`
	FromID     int64  `protobuf:"varint,2,opt,name=fromID,proto3" json:"fromID,omitempty"`
	DestID     int64  `protobuf:"varint,3,opt,name=destID,proto3" json:"destID,omitempty"`
	Mtype      string `protobuf:"bytes,4,opt,name=mtype,proto3" json:"mtype,omitempty"`
}

func (x *OSVMsg) Reset() {
	*x = OSVMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OSVMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSVMsg) ProtoMessage() {}

func (x *OSVMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSVMsg.ProtoReflect.Descriptor instead.
func (*OSVMsg) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{21}
}

func (x *OSVMsg) GetInstanceID() int64 {
	if x != nil {
		return x.InstanceID
	}
	return 0
}

func (x *OSVMsg) GetFromID() int64 {
	if x != nil {
		return x.FromID
	}
	return 0
}

func (x *OSVMsg) GetDestID() int64 {
	if x != nil {
		return x.DestID
	}
	return 0
}

func (x *OSVMsg) GetMtype() string {
	if x != nil {
		return x.Mtype
	}
	return ""
}

type AckMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AckMsg) Reset() {
	*x = AckMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AckMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckMsg) ProtoMessage() {}

func (x *AckMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckMsg.ProtoReflect.Descriptor instead.
func (*AckMsg) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{22}
}

type Help_ShardAndProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vc     []byte   `protobuf:"bytes,1,opt,name=vc,proto3" json:"vc,omitempty"`
	Shard  []byte   `protobuf:"bytes,2,opt,name=shard,proto3" json:"shard,omitempty"`
	Proof1 [][]byte `protobuf:"bytes,3,rep,name=proof1,proto3" json:"proof1,omitempty"`
	Proof2 []int64  `protobuf:"varint,4,rep,packed,name=proof2,proto3" json:"proof2,omitempty"`
}

func (x *Help_ShardAndProof) Reset() {
	*x = Help_ShardAndProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Help_ShardAndProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Help_ShardAndProof) ProtoMessage() {}

func (x *Help_ShardAndProof) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Help_ShardAndProof.ProtoReflect.Descriptor instead.
func (*Help_ShardAndProof) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{16, 0}
}

func (x *Help_ShardAndProof) GetVc() []byte {
	if x != nil {
		return x.Vc
	}
	return nil
}

func (x *Help_ShardAndProof) GetShard() []byte {
	if x != nil {
		return x.Shard
	}
	return nil
}

func (x *Help_ShardAndProof) GetProof1() [][]byte {
	if x != nil {
		return x.Proof1
	}
	return nil
}

func (x *Help_ShardAndProof) GetProof2() []int64 {
	if x != nil {
		return x.Proof2
	}
	return nil
}

var File_Message_proto protoreflect.FileDescriptor

var file_Message_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x5c, 0x0a, 0x10, 0x54, 0x65, 0x73, 0x74, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x73,
	0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x5a, 0x0a,
	0x0e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x73, 0x74, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x59, 0x0a, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x3d, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x22, 0x0a, 0x04, 0x45, 0x63, 0x68, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x69, 0x67, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x73,
	0x69, 0x67, 0x73, 0x68, 0x61, 0x72, 0x65, 0x22, 0x2e, 0x0a, 0x04, 0x4c, 0x6f, 0x63, 0x6b, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x73, 0x69, 0x67, 0x22, 0x30, 0x0a, 0x06, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69, 0x67, 0x22, 0x24, 0x0a, 0x04, 0x44, 0x6f, 0x6e,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x22,
	0x2e, 0x0a, 0x04, 0x48, 0x61, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69, 0x67, 0x22,
	0x45, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x6f,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x73, 0x69, 0x67, 0x22, 0x5e, 0x0a, 0x04, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x76, 0x6f,
	0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69,
	0x67, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x69,
	0x67, 0x73, 0x68, 0x61, 0x72, 0x65, 0x22, 0x2e, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02,
	0x74, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x22, 0x2d, 0x0a, 0x05, 0x42, 0x4c, 0x6f, 0x63, 0x6b, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x73, 0x69, 0x67, 0x22, 0x35, 0x0a, 0x0d, 0x42, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x65,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x26, 0x0a, 0x12,
	0x42, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x03, 0x73, 0x69, 0x67, 0x22, 0x20, 0x0a, 0x04, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x69,
	0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x22, 0xc2, 0x01, 0x0a, 0x04, 0x48, 0x65, 0x6c, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x07, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0d, 0x73, 0x68, 0x61,
	0x72, 0x64, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x48, 0x65, 0x6c, 0x70, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x41, 0x6e, 0x64,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x64, 0x41, 0x6e, 0x64, 0x50,
	0x72, 0x6f, 0x6f, 0x66, 0x1a, 0x65, 0x0a, 0x0d, 0x53, 0x68, 0x61, 0x72, 0x64, 0x41, 0x6e, 0x64,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x02, 0x76, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x72, 0x6f, 0x6f, 0x66, 0x31, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x72, 0x6f,
	0x6f, 0x66, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x32, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x32, 0x22, 0x31, 0x0a, 0x03, 0x44,
	0x65, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x53, 0x68, 0x61, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x64, 0x65, 0x63, 0x53, 0x68, 0x61, 0x72, 0x65, 0x22, 0xa1,
	0x01, 0x0a, 0x09, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x72, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x72,
	0x6f, 0x6d, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x7a, 0x69,
	0x78, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x03, 0x7a, 0x69, 0x78, 0x12, 0x10, 0x0a, 0x03,
	0x7a, 0x69, 0x79, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x03, 0x7a, 0x69, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x78, 0x69, 0x78, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x03, 0x78, 0x69, 0x78,
	0x12, 0x10, 0x0a, 0x03, 0x78, 0x69, 0x79, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x03, 0x78,
	0x69, 0x79, 0x22, 0x6c, 0x0a, 0x06, 0x4c, 0x43, 0x4d, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x72, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x72,
	0x6f, 0x6d, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x63, 0x6d, 0x69, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x6c, 0x63, 0x6d, 0x69,
	0x22, 0x67, 0x0a, 0x05, 0x53, 0x4b, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x72, 0x6f,
	0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x64, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x73, 0x6b, 0x22, 0x6e, 0x0a, 0x06, 0x4f, 0x53, 0x56,
	0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x73,
	0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6d, 0x74, 0x79, 0x70, 0x65, 0x22, 0x08, 0x0a, 0x06, 0x41, 0x63, 0x6b,
	0x4d, 0x73, 0x67, 0x32, 0x9d, 0x01, 0x0a, 0x05, 0x41, 0x42, 0x56, 0x53, 0x53, 0x12, 0x26, 0x0a,
	0x0d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x12, 0x0a,
	0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x4d, 0x73, 0x67, 0x1a, 0x07, 0x2e, 0x41, 0x63, 0x6b,
	0x4d, 0x73, 0x67, 0x22, 0x00, 0x12, 0x20, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x4c, 0x43, 0x4d, 0x12, 0x07, 0x2e, 0x4c, 0x43, 0x4d, 0x4d, 0x73, 0x67, 0x1a, 0x07, 0x2e, 0x41,
	0x63, 0x6b, 0x4d, 0x73, 0x67, 0x22, 0x00, 0x12, 0x23, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4c, 0x43, 0x4d, 0x12, 0x06, 0x2e, 0x53, 0x4b, 0x4d, 0x73,
	0x67, 0x1a, 0x07, 0x2e, 0x41, 0x63, 0x6b, 0x4d, 0x73, 0x67, 0x22, 0x00, 0x12, 0x25, 0x0a, 0x10,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x63, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x12, 0x06, 0x2e, 0x53, 0x4b, 0x4d, 0x73, 0x67, 0x1a, 0x07, 0x2e, 0x41, 0x63, 0x6b, 0x4d, 0x73,
	0x67, 0x22, 0x00, 0x32, 0xbf, 0x01, 0x0a, 0x05, 0x41, 0x42, 0x44, 0x4b, 0x47, 0x12, 0x26, 0x0a,
	0x0d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x12, 0x0a,
	0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x4d, 0x73, 0x67, 0x1a, 0x07, 0x2e, 0x41, 0x63, 0x6b,
	0x4d, 0x73, 0x67, 0x22, 0x00, 0x12, 0x20, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x4c, 0x43, 0x4d, 0x12, 0x07, 0x2e, 0x4c, 0x43, 0x4d, 0x4d, 0x73, 0x67, 0x1a, 0x07, 0x2e, 0x41,
	0x63, 0x6b, 0x4d, 0x73, 0x67, 0x22, 0x00, 0x12, 0x23, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4c, 0x43, 0x4d, 0x12, 0x06, 0x2e, 0x53, 0x4b, 0x4d, 0x73,
	0x67, 0x1a, 0x07, 0x2e, 0x41, 0x63, 0x6b, 0x4d, 0x73, 0x67, 0x22, 0x00, 0x12, 0x25, 0x0a, 0x10,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x63, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x12, 0x06, 0x2e, 0x53, 0x4b, 0x4d, 0x73, 0x67, 0x1a, 0x07, 0x2e, 0x41, 0x63, 0x6b, 0x4d, 0x73,
	0x67, 0x22, 0x00, 0x12, 0x20, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4f, 0x53,
	0x56, 0x12, 0x07, 0x2e, 0x4f, 0x53, 0x56, 0x4d, 0x73, 0x67, 0x1a, 0x07, 0x2e, 0x41, 0x63, 0x6b,
	0x4d, 0x73, 0x67, 0x22, 0x00, 0x32, 0x24, 0x0a, 0x03, 0x4f, 0x53, 0x56, 0x12, 0x1d, 0x0a, 0x07,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x07, 0x2e, 0x4f, 0x53, 0x56, 0x4d, 0x73, 0x67,
	0x1a, 0x07, 0x2e, 0x41, 0x63, 0x6b, 0x4d, 0x73, 0x67, 0x22, 0x00, 0x32, 0x37, 0x0a, 0x04, 0x43,
	0x6f, 0x6e, 0x6e, 0x12, 0x2f, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x11,
	0x2e, 0x54, 0x65, 0x73, 0x74, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x1a, 0x0f, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Message_proto_rawDescOnce sync.Once
	file_Message_proto_rawDescData = file_Message_proto_rawDesc
)

func file_Message_proto_rawDescGZIP() []byte {
	file_Message_proto_rawDescOnce.Do(func() {
		file_Message_proto_rawDescData = protoimpl.X.CompressGZIP(file_Message_proto_rawDescData)
	})
	return file_Message_proto_rawDescData
}

var file_Message_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_Message_proto_goTypes = []interface{}{
	(*TestHelloMessage)(nil),   // 0: TestHelloMessage
	(*TestResMessage)(nil),     // 1: TestResMessage
	(*Message)(nil),            // 2: Message
	(*Value)(nil),              // 3: Value
	(*Echo)(nil),               // 4: Echo
	(*Lock)(nil),               // 5: Lock
	(*Finish)(nil),             // 6: Finish
	(*Done)(nil),               // 7: Done
	(*Halt)(nil),               // 8: Halt
	(*PreVote)(nil),            // 9: PreVote
	(*Vote)(nil),               // 10: Vote
	(*Proposal)(nil),           // 11: Proposal
	(*BLock)(nil),              // 12: BLock
	(*BLockSetValue)(nil),      // 13: BLockSetValue
	(*BLockSetValidation)(nil), // 14: BLockSetValidation
	(*Call)(nil),               // 15: Call
	(*Help)(nil),               // 16: Help
	(*Dec)(nil),                // 17: Dec
	(*SharesMsg)(nil),          // 18: SharesMsg
	(*LCMMsg)(nil),             // 19: LCMMsg
	(*SKMsg)(nil),              // 20: SKMsg
	(*OSVMsg)(nil),             // 21: OSVMsg
	(*AckMsg)(nil),             // 22: AckMsg
	(*Help_ShardAndProof)(nil), // 23: Help.ShardAndProof
}
var file_Message_proto_depIdxs = []int32{
	23, // 0: Help.shardAndProof:type_name -> Help.ShardAndProof
	18, // 1: ABVSS.ReceiveShares:input_type -> SharesMsg
	19, // 2: ABVSS.ReceiveLCM:input_type -> LCMMsg
	20, // 3: ABVSS.ReconstructLCM:input_type -> SKMsg
	20, // 4: ABVSS.ReceiveRecShares:input_type -> SKMsg
	18, // 5: ABDKG.ReceiveShares:input_type -> SharesMsg
	19, // 6: ABDKG.ReceiveLCM:input_type -> LCMMsg
	20, // 7: ABDKG.ReconstructLCM:input_type -> SKMsg
	20, // 8: ABDKG.ReceiveRecShares:input_type -> SKMsg
	21, // 9: ABDKG.ReceiveOSV:input_type -> OSVMsg
	21, // 10: OSV.Receive:input_type -> OSVMsg
	0,  // 11: Conn.Receive:input_type -> TestHelloMessage
	22, // 12: ABVSS.ReceiveShares:output_type -> AckMsg
	22, // 13: ABVSS.ReceiveLCM:output_type -> AckMsg
	22, // 14: ABVSS.ReconstructLCM:output_type -> AckMsg
	22, // 15: ABVSS.ReceiveRecShares:output_type -> AckMsg
	22, // 16: ABDKG.ReceiveShares:output_type -> AckMsg
	22, // 17: ABDKG.ReceiveLCM:output_type -> AckMsg
	22, // 18: ABDKG.ReconstructLCM:output_type -> AckMsg
	22, // 19: ABDKG.ReceiveRecShares:output_type -> AckMsg
	22, // 20: ABDKG.ReceiveOSV:output_type -> AckMsg
	22, // 21: OSV.Receive:output_type -> AckMsg
	1,  // 22: Conn.Receive:output_type -> TestResMessage
	12, // [12:23] is the sub-list for method output_type
	1,  // [1:12] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_Message_proto_init() }
func file_Message_proto_init() {
	if File_Message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestHelloMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestResMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Echo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Finish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Done); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Halt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Proposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BLock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BLockSetValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BLockSetValidation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Call); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Help); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SharesMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LCMMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SKMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OSVMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AckMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Help_ShardAndProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_Message_proto_goTypes,
		DependencyIndexes: file_Message_proto_depIdxs,
		MessageInfos:      file_Message_proto_msgTypes,
	}.Build()
	File_Message_proto = out.File
	file_Message_proto_rawDesc = nil
	file_Message_proto_goTypes = nil
	file_Message_proto_depIdxs = nil
}
